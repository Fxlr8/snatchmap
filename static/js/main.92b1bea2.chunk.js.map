{"version":3,"sources":["breakpoints.ts","components/Map.tsx","components/Icon.tsx","components/Sidebar.tsx","components/Logo.tsx","App.tsx","serviceWorker.ts","index.tsx","svg/link.svg","svg/map/plane.svg","svg/map/ship.svg","svg/map/pin.svg","svg/ship.svg","svg/plane.svg","svg/cross.svg","svg/github.svg","svg/building.svg","logo.svg"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","createImage","src","image","Image","planeImage","plane","shipImage","ship","pinImage","pin","MapComponent","ReactMapboxGl","accessToken","StyledMap","styled","swap","coord","PinLayer","imageName","objects","dispatch","useContext","StateContext","type","id","layout","map","item","onClick","propertyId","_id","ownerId","personId","key","coordinates","location","geometry","defaultCenter","Images","memo","data","initialZoom","className","state","useAxios","pins","loading","error","items","filter","ships","planes","center","useMemo","obj","find","i","style","zoom","movingMethod","Icon","props","Div100vh","_Div100vh","CloseButton","div","SidebarContainer","show","SidebarTitle","Block","ClickableBlock","Flex","PropertyImage","img","PropertyName","PropertyDescription","PriceTag","Link","a","LogoFBK","GreyIcon","SVG","LinkTitle","PersonImage","PersonSurname","PersonName","PersonBlock","PersonDescription","InfoBlock","InfoLabel","Line","InfoData","PropertyType","PropertyTypeName","PropertyDash","PropertyCount","PropertyTypes","OtherPropertyImage","OtherPropertyPrice","PropertyInfo","property","photoUrl","name","text","price","value","target","href","proofUrl","linkSvg","PersonInfo","person","backgroundImage","surname","description","party","salary","OtherProperty","OtherProperties","properties","total","console","log","reduce","h","s","p","houses","shipSvg","planeSvg","buildingSvg","otherProperty","Title","Description","SidebarPage","PersonList","persons","cursor","QuoteName","Sidebar","sidebarContainerRef","useRef","useState","index","setIndex","propertiesData","useEffect","current","scrollTo","top","left","behavior","count","ref","onChangeIndex","githubSvg","position","crossSvg","LogoText","LogoIcon","logoSvg","SELECT_PROPERTY","appReducer","action","initialState","sidebar","createContext","App","useReducer","Provider","Boolean","window","hostname","match","ReactDOM","render","locale","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.92b1bea2.chunk.js","sourcesContent":["const size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\nconst device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`\n};\n\nexport default device\n\n\n\n","import styled from 'styled-components'\nimport React, { FC, useContext, memo, useMemo } from 'react'\nimport ReactMapboxGl, { Layer, Feature, Marker, Image as MapImage } from 'react-mapbox-gl'\nimport useAxios from 'axios-hooks'\nimport { StateContext } from '../App'\nimport Icon from '../components/Icon'\nimport plane from '../svg/map/plane.svg'\nimport ship from '../svg/map/ship.svg'\nimport pin from '../svg/map/pin.svg'\nimport device from '../breakpoints'\nimport Div100vh from 'react-div-100vh'\nimport { Property } from 'apiTypes'\n\nfunction createImage(src: string) {\n    const image = new Image(75, 75)\n    image.src = src\n    return image\n}\n\nconst planeImage = createImage(plane)\nconst shipImage = createImage(ship)\nconst pinImage = createImage(pin)\n\nconst MapComponent = ReactMapboxGl({\n    accessToken: 'pk.eyJ1IjoiZnhscjgiLCJhIjoiY2s0NGpieWpkMGJ6eDNvbWdvcml1aG1pZSJ9.pAeNPdFX91L9Z33XLXrnbA',\n})\n\nconst StyledMap = styled(MapComponent)`\n    height: 100%;\n    width: 100%;\n    transform: translateY(-30%);\n    transition: transform 300ms ease;\n\n    @media ${device.laptop} {\n        transform: translateY(0);\n    }\n`\n\ninterface MapProps {\n    className?: string\n}\n\nfunction swap(coord: [number, number]): [number, number] {\n    return [coord[1], coord[0]]\n}\n\ninterface MapApiResult {\n    items: Property[]\n}\n\ninterface PinLayerProps {\n    imageName: string,\n    objects: Property[]\n}\n\nconst PinLayer: React.FC<PinLayerProps> = ({ imageName, objects }) => {\n    const { dispatch } = useContext(StateContext)\n    return (\n        <Layer type=\"symbol\" id={`marker-${imageName}`} layout={{ 'icon-image': imageName, 'icon-size': 0.5 }}>\n            {objects.map((item: Property) =>\n                <Feature\n                    onClick={() => dispatch({ type: 'SELECT_PROPERTY', propertyId: item._id, ownerId: item.personId })}\n                    key={item._id}\n                    coordinates={swap(item.location.geometry.coordinates)} />\n            )}\n        </Layer>\n    )\n}\n\nconst defaultCenter: [number, number] = [37.627771, 55.7537485]\n\nconst Images: FC = memo(() => {\n    return (\n        <>\n            <MapImage id='plane-icon' data={planeImage} />\n            <MapImage id='ship-icon' data={shipImage} />\n            <MapImage id='pin-icon' data={pinImage} />\n        </>\n    )\n})\n\nconst initialZoom: [number] = [3]\n\nconst Map: FC<MapProps> = ({ className }) => {\n    const { state: { propertyId } } = useContext(StateContext)\n    const [{ data, loading, error }] = useAxios<MapApiResult>(\n        'https://branched-glue.glitch.me/object/objects'\n    )\n\n    const pins = data && data.items.filter((item) => item.type === 'building' && !!item.location)\n    const ships = data && data.items.filter((item) => item.type === 'yacht' && !!item.location)\n    const planes = data && data.items.filter((item) => item.type === 'plane' && !!item.location)\n\n    const center = useMemo(() => {\n        if (data) {\n            const obj = data.items.find(i => i._id === propertyId)\n            if (obj && obj.location) {\n                return swap(obj.location.geometry.coordinates)\n            }\n        }\n        return defaultCenter\n    }, [propertyId, data])\n\n    return (\n        <Div100vh>\n            <StyledMap\n                style=\"mapbox://styles/mapbox/light-v10\" //eslint-disable-line\n                center={center}\n                className={className}\n                zoom={initialZoom}\n                movingMethod='easeTo'\n            >\n                {pins && <PinLayer objects={pins} imageName='pin-icon' />}\n                {ships && <PinLayer objects={ships} imageName='ship-icon' />}\n                {planes && <PinLayer objects={planes} imageName='plane-icon' />}\n                <Images />\n                {/* <>{!loading && !error ? <Layers data={data} /> : null}</> */}\n            </StyledMap>\n        </Div100vh>\n    )\n}\n\nexport default memo(styled(Map)`\n    height: 100vh;\n    width: 100vw;\n`)\n","import SVG, { IProps as SvgProps } from 'react-inlinesvg'\nimport React, { FC } from 'react'\n\ninterface IconProps {\n    src: string\n    className?: string\n}\n\nconst Icon: FC<IconProps | SvgProps> = (props) => {\n    return (\n        <SVG  {...props} />\n    )\n}\n\nexport default Icon\n","import React, { FC, useContext, useRef, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport SVG from './Icon'\nimport linkSvg from '../svg/link.svg'\nimport shipSvg from '../svg/ship.svg'\nimport planeSvg from '../svg/plane.svg'\nimport crossSvg from '../svg/cross.svg'\nimport githubSvg from '../svg/github.svg'\nimport buildingSvg from '../svg/building.svg'\nimport device from '../breakpoints'\nimport _Div100vh from 'react-div-100vh'\nimport useAxios from 'axios-hooks'\nimport { Property, Person } from '../apiTypes'\nimport { StateContext } from '../App'\nimport { FormattedNumber, FormattedDate } from 'react-intl'\nimport SwipeableViews from 'react-swipeable-views'\n\nconst Div100vh = styled(_Div100vh)`\n    position: fixed;\n    left: 0;\n    top: 0;\n    pointer-events: none;\n`\n\nconst CloseButton = styled.div`\n    position: absolute;\n    background: #FFFFFF;\n    box-shadow: 0 2px 6px 0 rgba(0,0,0,0.20);\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    top: -12px;\n    right: 24px;\n    width: 36px;\n    height: 36px;\n    cursor: pointer;\n`\n\nconst SidebarContainer = styled.div<SidebarContainerProps>`\n    width: 100vw;\n    height: 60%;\n    top: 40%;\n    background-color: #FFF;\n    left: 0;\n    z-index: 10;\n    overflow-y: scroll;\n    position: relative;\n    pointer-events: auto;\n\n    transform: translateX(${props => props.show ? 0 : -100}%);\n    transition: transform 200ms ease;\n\n    @media ${device.laptop} {\n        width: 420px;\n        height: 100%;\n        top: 0;\n        transform: translateX(${props => props.show ? 0 : -100}%);\n        transform: translateY(${props => props.show ? 0 : 100}%);\n    }\n`\n\nconst SidebarTitle = styled.div`\n    font-family: Roboto;\n    font-size: 13px;\n    color: #646464;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n    font-weight: medium;\n`\n\nconst Block = styled.div`\n    padding: 0 24px;\n    margin-bottom: 24px;\n`\n\nconst ClickableBlock = styled(Block)`\n    cursor: pointer;\n`\n\nconst Flex = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n`\n\nconst SearchBar = styled.div`\n    margin: 24px;\n    border-radius: 5px;\n    background: #FFFFFF;\n    box-shadow: 0 2px 6px 0 rgba(0,0,0,0.20);\n    height: 48px;\n`\n\nconst PropertyImage = styled.img`\n    width: 100%;\n    height: auto;\n    margin-bottom: 24px;\n`\n\nconst PropertyName = styled.div`\n    font-family: PTSerif;\n    font-weight: bold;\n    font-size: 20px;\n    color: #000000;\n    letter-spacing: 0;\n`\n\nconst PropertyFeature = styled.div`\n    color: #646464;\n    font-size: 16px;\n    margin-left: 24px;\n`\n\nconst PropertyDescription = styled.div`\n    font-size: 15px;\n    line-height: 22px;\n    color: #646464;\n`\n\nconst PriceTag = styled.div`\n    padding: 9px 15px;\n    border-radius: 5px;\n    background-color: #E32525;\n    color: #FFF;\n    font-weight: bold;\n    font-size: 20px;\n`\n\nconst Link = styled.a`\n    padding: 20px 0;\n    border-top: 1px solid #E5E5E5;\n    border-bottom: 1px solid #E5E5E5;\n    display: flex;\n    text-decoration: none;\n`\n\nconst LogoFBK = styled.div`\n    width: 16px;\n    height: 16px;\n    background-color: #CC0001;\n    border-radius: 8px;\n`\n\nconst GreyIcon = styled(SVG)`\n    fill: #B7B7B7;\n`\n\nconst LinkTitle = styled.div`\n    font-size: 15px;\n    color: #000000;\n    margin-left: 12px;\n    margin-right: auto;\n`\n\ninterface ImageProps {\n    src: string;\n}\n\nconst PersonImage = styled.div`\n    width: 72px;\n    height: 72px;\n    border-radius: 50%;\n    background-size: cover;\n    margin-right: 20px;\n`\n\nconst PersonSurname = styled.div`\n    font-family: PTSerif;\n    font-weight: bold;\n    font-size: 20px;\n    color: #000000;\n`\n\nconst PersonName = styled.div`\n    font-family: PTSerif;\n    font-size: 18px;\n    color: #000000;\n`\n\nconst PersonBlock = styled(Flex)`\n    align-items: center;\n    justify-content: flex-start;\n`\n\nconst PersonDescription = styled.div`\n    padding: 16px 24px;\n    background-color: #F7F7F7;\n    font-size: 15px;\n    color: #000000;\n    line-height: 22px;\n    margin-bottom: 20px;\n`\n\nconst InfoBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 14px;\n`\n\nconst InfoLabel = styled.div`\n    font-size: 15px;\n    color: #646464;\n    letter-spacing: 0;\n    max-width: 65%;\n`\n\nconst Line = styled.div`\n    height: 1px;\n    background-color: #E5E5E5;\n`\n\nconst InfoData = styled.div`\n`\n\nconst PropertyType = styled.div`\n    background: #FFFFFF;\n    border: 1px solid #E5E5E5;\n    box-shadow: 0 1px 4px 0 rgba(0,0,0,0.07);\n    border-radius: 18px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0 16px;\n    margin-right: 10px;\n    margin-bottom: 10px;\n`\n\nconst PropertyTypeName = styled.div`\n    font-size: 14px;\n    color: #4A4A4A;\n    margin-left: 10px;\n    margin-right: 14px;\n`\n\nconst PropertyDash = styled.div`\n    width: 1px;\n    height: 20px;\n    background-color: #E5E5E5;\n`\n\nconst PropertyCount = styled.div`\n    margin-left: 14px;\n    color: #4A4A4A;\n`\n\nconst PropertyTypes = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: flex-start;\n    margin-bottom: -10px;\n`\n\nconst OtherPropertyImage = styled.img`\n    border-radius: 5px;\n    width: 100%;\n    height: auto;\n    margin-bottom: 16px;\n`\n\nconst OtherPropertyPrice = styled.div`\n    font-size: 15px;\n    color: #646464;\n`\n\ninterface ApiPropertiesResponse {\n    count: number\n    items: Property[]\n}\n\ninterface PropertyInfoProps {\n    property: Property\n}\n\nconst PropertyInfo: FC<PropertyInfoProps> = ({ property }) => {\n    return (\n        <>\n            <Block>\n                <SidebarTitle>\n                    Объект\n                </SidebarTitle>\n            </Block>\n            <PropertyImage src={property.photoUrl} />\n            <Block>\n                <Flex>\n                    <PropertyName>{property.name}</PropertyName>\n                    {/* <PropertyFeature>2112м<sup>2</sup></PropertyFeature> */}\n                </Flex>\n                <PropertyDescription>{property.text}</PropertyDescription>\n            </Block>\n            {!!property.price && <Block>\n                <Flex>\n                    <PriceTag><FormattedNumber value={property.price} /> руб.</PriceTag>\n                </Flex>\n            </Block>}\n            <Block>\n                <Link target='_blank' href={property.proofUrl}>\n                    <LogoFBK />\n                    <LinkTitle>Ссылка на расследование ФБК</LinkTitle>\n                    <GreyIcon src={linkSvg} />\n                </Link>\n            </Block>\n        </>\n    )\n}\n\ninterface PersonInfoProps {\n    person: Person\n}\n\nconst PersonInfo: FC<PersonInfoProps> = ({ person }) => {\n    return (\n        <>\n            <Block>\n                <SidebarTitle>\n                    Владелец\n                </SidebarTitle>\n            </Block>\n            <Block>\n                <PersonBlock>\n                    <PersonImage style={{ backgroundImage: `url(${person.photoUrl})` }} />\n                    <div>\n                        <PersonSurname>{person.surname}</PersonSurname>\n                        <PersonName>{person.name}</PersonName>\n                    </div>\n                </PersonBlock>\n            </Block>\n            <PersonDescription>\n                {person.description}\n            </PersonDescription>\n            <Block>\n                {!!person.party && <InfoBlock>\n                    <InfoLabel>Партия</InfoLabel>\n                    <InfoData>{person.party}</InfoData>\n                </InfoBlock>}\n                {/* <InfoBlock>\n                    <InfoLabel>Стаж на посту</InfoLabel>\n                    <InfoData><FormattedDate value={person.workFrom} /></InfoData>\n                </InfoBlock> */}\n                {!!person.salary && <InfoBlock>\n                    <InfoLabel>Официальный оклад</InfoLabel>\n                    <InfoData><FormattedNumber value={person.salary} /> руб.</InfoData>\n                </InfoBlock>}\n                {/* <InfoBlock>\n                    <InfoLabel>Время для накопления стоимости объекта</InfoLabel>\n                    <InfoData>90 лет</InfoData>\n                </InfoBlock> */}\n            </Block>\n        </>\n    )\n}\n\nconst OtherProperty: FC<PropertyInfoProps> = ({ property }) => {\n    const { dispatch } = useContext(StateContext)\n    return (\n        <ClickableBlock onClick={() => dispatch({ type: 'SELECT_PROPERTY', propertyId: property._id, ownerId: property.personId })}>\n            <OtherPropertyImage src={property.photoUrl} />\n            <Flex>\n                <PropertyName>{property.name}</PropertyName>\n                {/* <PropertyFeature>1920м<sup>2</sup></PropertyFeature> */}\n            </Flex>\n            <OtherPropertyPrice><FormattedNumber value={property.price} /> руб</OtherPropertyPrice>\n        </ClickableBlock>\n    )\n}\n\ninterface OtherPropertiesProps {\n    properties: Property[]\n    propertyId?: string\n}\n\nconst OtherProperties: FC<OtherPropertiesProps> = ({ properties, propertyId }) => {\n    let total = 0\n    console.log(properties)\n    const [houses, ships, planes] = properties.reduce(([h, s, p], { type, price }) => {\n        total += price\n        switch (type) {\n            case 'yacht': s += 1\n                break\n            case 'building': h += 1\n                break\n            case 'plane': p += 1\n                break\n        }\n        return [h, s, p]\n    }, [0, 0, 0])\n\n    console.log({\n        houses,\n        ships,\n        planes\n    })\n\n    return (\n        <>\n            <Block>\n                <SidebarTitle>Имущество</SidebarTitle>\n            </Block>\n            <Block>\n                <InfoBlock>\n                    <InfoLabel>Общая стоимость</InfoLabel>\n                    <InfoData><FormattedNumber value={total} /> руб</InfoData>\n                </InfoBlock>\n            </Block>\n            <Block>\n                <PropertyTypes>\n                    {ships > 0 && <PropertyType>\n                        <GreyIcon src={shipSvg} />\n                        <PropertyTypeName>Яхты</PropertyTypeName>\n                        <PropertyDash />\n                        <PropertyCount>{ships}</PropertyCount>\n                    </PropertyType>}\n                    {planes > 0 && <PropertyType>\n                        <GreyIcon src={planeSvg} />\n                        <PropertyTypeName>Самолёты</PropertyTypeName>\n                        <PropertyDash />\n                        <PropertyCount>{planes}</PropertyCount>\n                    </PropertyType>}\n                    {houses > 0 && <PropertyType>\n                        <GreyIcon src={buildingSvg} />\n                        <PropertyTypeName>Недвижимость</PropertyTypeName>\n                        <PropertyDash />\n                        <PropertyCount>{houses}</PropertyCount>\n                    </PropertyType>}\n                </PropertyTypes>\n            </Block>\n            {properties.filter(p => p._id !== propertyId).map(otherProperty =>\n                <OtherProperty key={otherProperty._id} property={otherProperty} />\n            )}\n        </>\n    )\n}\n\nconst Title = styled.div`\n    font-family: PTSerif;\n    font-size: 20px;\n    font-weight: bold;\n    color: #000000;\n`\n\nconst Description = styled.div`\n    font-family: Roboto;\n    font-size: 15px;\n    color: #646464;\n    line-height: 22px;\n`\n\nconst SidebarPage = styled.div`\n    padding-top: 24px;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n`\n\ninterface SidebarProps {\n    show: boolean\n    propertyId?: string\n    ownerId?: string\n}\n\ninterface SidebarContainerProps {\n    show: boolean\n}\n\ninterface PersonsResponse {\n    items: Person[]\n}\n\nconst PersonList: FC = () => {\n    const { dispatch } = useContext(StateContext)\n    const [{ data }] = useAxios<PersonsResponse>(\n        `https://branched-glue.glitch.me/object/persons/`\n    )\n\n    const persons = data && data.items || []\n\n    return (\n        <>\n            {persons.map(person =>\n                <Block>\n                    <PersonBlock style={{ cursor: 'pointer' }} onClick={() => { dispatch({ type: 'SELECT_PROPERTY', ownerId: person._id }) }}>\n                        <PersonImage style={{ backgroundImage: `url(${person.photoUrl})` }} />\n                        <div>\n                            <PersonSurname>{person.surname}</PersonSurname>\n                            <PersonName>{person.name}</PersonName>\n                        </div>\n                    </PersonBlock>\n                </Block>\n            )}\n        </>\n    )\n}\n\nconst QuoteName = styled.div`\n    font-weight: bold;\n    margin-top: 10px;\n    text-align: right;\n    font-family: PTSerif;\n`\n\nconst Sidebar: FC<SidebarProps> = ({ show, propertyId, ownerId }) => {\n    const sidebarContainerRef = useRef<HTMLDivElement>(null)\n    const { dispatch } = useContext(StateContext)\n    const [index, setIndex] = useState(0)\n    // const [{ data, loading, error }] = useAxios<Property>(\n    //     `https://branched-glue.glitch.me/object/objects/${propertyId}`\n    // )\n\n    const [{ data: person }] = useAxios(\n        `https://branched-glue.glitch.me/object/persons/${ownerId}`\n    )\n\n    const [{ data: propertiesData }] = useAxios<ApiPropertiesResponse>(\n        `https://branched-glue.glitch.me/object/objects?personId=${ownerId}`\n    )\n\n    useEffect(() => {\n        if (sidebarContainerRef.current) {\n            sidebarContainerRef.current.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth'\n            })\n        }\n    }, [propertyId, ownerId])\n\n    useEffect(() => {\n        if (propertyId || ownerId) {\n            setIndex(1)\n        } else {\n            setIndex(0)\n        }\n    }, [propertyId, ownerId])\n\n    console.log(propertiesData)\n\n    const property = propertiesData && propertiesData.count > 0 && propertiesData.items.find(p => p._id === propertyId)\n\n    return (\n        <Div100vh>\n            <SidebarContainer ref={sidebarContainerRef} show={show}>\n                <SwipeableViews index={index} onChangeIndex={(i) => setIndex(i)} >\n                    <SidebarPage>\n                        <Block>\n                            <Title>Карта антикоррупционных расследований</Title>\n                            <Description>\n                                Жулики и воры очень не любят публичность и лишнее внимание.\n                                Цель проекта - собрать на одной карте как можно больше фактов коррупции и сделать достоянием общественности.\n                            </Description>\n                        </Block>\n                        <PersonDescription>\n                            «Нет никаких «государственных денег», есть только деньги налогоплательщиков.»\n                                <QuoteName>М. Тэтчер</QuoteName>\n                        </PersonDescription>\n                        <Block>\n                            <Description>\n                                Все данные взяты из открытых источников.\n                                <br />\n                                Данные хранятся в публичном репозитории:\n                            </Description>\n                        </Block>\n                        <Block>\n                            <Link target='_blank' href='https://github.com/awesome-corruption/main'>\n                                <SVG src={githubSvg} />\n                                <LinkTitle>Помочь заполнить базу</LinkTitle>\n                                <GreyIcon src={linkSvg} />\n                            </Link>\n                        </Block>\n\n                        <Block>\n                            <SidebarTitle>Действующие лица</SidebarTitle>\n                        </Block>\n                        <PersonList />\n                    </SidebarPage>\n                    <SidebarPage>\n                        <div style={{ position: 'relative' }}>\n                            <CloseButton onClick={() => dispatch({ type: 'SELECT_PROPERTY' })}>\n                                <SVG src={crossSvg} />\n                            </CloseButton>\n                        </div>\n                        {property && <PropertyInfo property={property} />}\n                        {person && <PersonInfo person={person} />}\n                        <Block>\n                            <Line />\n                        </Block>\n                        {propertiesData && propertiesData.items && <OtherProperties properties={propertiesData.items} propertyId={propertyId} />}\n                    </SidebarPage>\n                </SwipeableViews>\n            </SidebarContainer>\n        </Div100vh>\n    )\n}\n\nexport default Sidebar\n","import styled from 'styled-components'\nimport React, { FC } from 'react'\nimport Icon from './Icon'\nimport logoSvg from '../logo.svg'\n\nconst LogoText = styled.div`\n    font-family: Helvetica;\n    font-size: 25px;\n    color: #000000;\n    margin-left: 10px;\n    font-weight: bold;\n`\n\nconst LogoIcon = styled(Icon)`\n    fill: #E32525;\n`\n\ninterface LogoProps {\n    className?: string\n}\n\nconst Logo: FC<LogoProps> = ({ className }) => {\n    return (\n        <div className={className}>\n            <LogoIcon src={logoSvg} />\n            <LogoText>snatchmap</LogoText>\n        </div>\n    )\n}\n\nexport default styled(Logo)`\n    position: absolute;\n    background: #fff;\n    left: 50%;\n    top: 10px;\n    padding: 0 26px;\n    border-radius: 38px;\n    transform: translateX(-50%);\n    box-shadow: 0 2px 6px 0 rgba(0,0,0,0.20);\n    border-radius: 27px;\n    height: 54px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`","import React, { useReducer, useContext, createContext } from 'react';\nimport Map from './components/Map'\nimport Sidebar from './components/Sidebar'\nimport Logo from 'components/Logo'\nimport Search from 'components/Search'\n\nconst TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR'\nconst SELECT_PROPERTY = 'SELECT_PROPERTY'\n\ninterface ToggleSidebarAction {\n  type: typeof TOGGLE_SIDEBAR\n  payload?: boolean\n}\n\ninterface SetPropertyAction {\n  type: typeof SELECT_PROPERTY\n  propertyId?: string,\n  ownerId?: string\n}\n\ntype AppActions = ToggleSidebarAction | SetPropertyAction\n\ninterface AppState {\n  sidebar: boolean\n  propertyId?: string\n  ownerId?: string\n}\n\nfunction appReducer(state: AppState, action: AppActions): AppState {\n  switch (action.type) {\n    case SELECT_PROPERTY: return {\n      ...state,\n      propertyId: action.propertyId,\n      ownerId: action.ownerId\n    }\n  }\n  return state\n}\n\nconst initialState = {\n  sidebar: true,\n  // propertyId: '5df642bf1c9d44000093bd99',\n  // ownerId: '5df642455341ca2822139b33'\n}\n\nconst StateContext = createContext<{ state: AppState, dispatch: React.Dispatch<AppActions> }>(\n  {\n    state: initialState,\n    dispatch: () => initialState\n  }\n)\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer(appReducer, initialState)\n\n  return (\n    <StateContext.Provider value={{ state, dispatch }}>\n      <Map />\n      <Sidebar show={state.sidebar} propertyId={state.propertyId} ownerId={state.ownerId} />\n      <Logo />\n      {/* <Search /> */}\n    </StateContext.Provider >\n  );\n}\n\nexport {\n  StateContext\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Normalize } from 'styled-normalize'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { IntlProvider } from 'react-intl';\n\nReactDOM.render(\n    <IntlProvider locale='ru'>\n        <Normalize />\n        <App />\n    </IntlProvider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/link.15cce0de.svg\";","module.exports = __webpack_public_path__ + \"static/media/plane.6770c7ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/ship.194cf988.svg\";","module.exports = __webpack_public_path__ + \"static/media/pin.ce25c562.svg\";","module.exports = __webpack_public_path__ + \"static/media/ship.e3907d7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/plane.6a9cdf8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.29bf1d8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.308c2f82.svg\";","module.exports = __webpack_public_path__ + \"static/media/building.97dede31.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2809b199.svg\";"],"sourceRoot":""}