{"version":3,"sources":["svg/link.svg","svg/ship.svg","svg/plane.svg","svg/building.svg","logo.svg","components/Map.tsx","components/Icon.tsx","components/Sidebar.tsx","components/Logo.tsx","components/Search.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MapComponent","ReactMapboxGl","accessToken","styled","className","style","center","Svg","SVG","Icon","props","SidebarContainer","div","SidebarTitle","Block","Flex","SearchBar","PropertyImage","img","PropertyName","PropertyFeature","PropertyDescription","PriceTag","Link","a","LogoFBK","GreyIcon","LinkTitle","PersonImage","PersonSurname","PersonName","PersonBlock","PersonDescription","InfoBlock","InfoLabel","Line","InfoData","PropertyType","PropertyTypeName","PropertyDash","PropertyCount","PropertyTypes","OtherPropertyImage","OtherPropertyPrice","Sidebar","src","href","linkSvg","backgroundImage","shipSvg","planeSvg","buildingSvg","LogoText","LogoIcon","logoSvg","SearchIcon","ClearIcon","Input","input","type","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b51b76db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/link.15cce0de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ship.3ca06a9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/plane.e375abac.svg\";","module.exports = __webpack_public_path__ + \"static/media/building.97dede31.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.e1a80e4e.svg\";","import styled from 'styled-components'\nimport React, { FC } from 'react'\nimport ReactMapboxGl from 'react-mapbox-gl';\n\nconst MapComponent = ReactMapboxGl({\n    accessToken:\n        'pk.eyJ1IjoiZnhscjgiLCJhIjoiY2s0NGpieWpkMGJ6eDNvbWdvcml1aG1pZSJ9.pAeNPdFX91L9Z33XLXrnbA'\n});\n\ninterface MapProps {\n    className?: string\n}\n\nconst Map: FC<MapProps> = ({ className }) => {\n    return (\n        <MapComponent\n            style='mapbox://styles/mapbox/light-v10'\n            center={[37.627771, 55.7537485]}\n            className={className}\n        />\n    )\n}\n\nexport default styled(Map)`\n    height: 100vh;\n    width: 100vw;\n`","import SVG, { IProps as SvgProps } from 'react-inlinesvg'\nimport React, { FC } from 'react'\n\n// у либы какие-то проблемы с типами, этот компонент просто временный фикс\n\ninterface IconProps {\n    src: string\n    className?: string\n}\n\nconst Svg = SVG as any as FC<IconProps | SvgProps>\n\nconst Icon: FC<IconProps | SvgProps> = (props) => {\n    return (\n        <Svg  {...props} />\n    )\n}\n\nexport default Icon\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport SVG from './Icon'\nimport linkSvg from '../svg/link.svg'\nimport shipSvg from '../svg/ship.svg'\nimport planeSvg from '../svg/plane.svg'\nimport buildingSvg from '../svg/building.svg'\n\nconst SidebarContainer = styled.div`\n    width: 420px;\n    height: 100vh;\n    background-color: #FFF;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 10;\n    overflow-y: scroll;\n`\n\nconst SidebarTitle = styled.div`\n    font-family: Roboto;\n    font-size: 13px;\n    color: #646464;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n    font-weight: medium;\n`\n\nconst Block = styled.div`\n    padding: 0 24px;\n    margin-bottom: 24px;\n`\n\nconst Flex = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n`\n\nconst SearchBar = styled.div`\n    margin: 24px;\n    border-radius: 5px;\n    background: #FFFFFF;\n    box-shadow: 0 2px 6px 0 rgba(0,0,0,0.20);\n    height: 48px;\n`\n\nconst PropertyImage = styled.img`\n    width: 100%;\n    height: auto;\n    margin-bottom: 24px;\n`\n\nconst PropertyName = styled.div`\n    font-family: PTSerif;\n    font-weight: bold;\n    font-size: 20px;\n    color: #000000;\n    letter-spacing: 0;\n`\n\nconst PropertyFeature = styled.div`\n    color: #646464;\n    font-size: 16px;\n`\n\nconst PropertyDescription = styled.div`\n    font-size: 15px;\n    line-height: 22px;\n    color: #646464;\n`\n\nconst PriceTag = styled.div`\n    padding: 9px 15px;\n    border-radius: 5px;\n    background-color: #E32525;\n    color: #FFF;\n    font-weight: bold;\n    font-size: 20px;\n`\n\nconst Link = styled.a`\n    padding: 20px 0;\n    border-top: 1px solid #E5E5E5;\n    border-bottom: 1px solid #E5E5E5;\n    display: flex;\n    text-decoration: none;\n`\n\nconst LogoFBK = styled.div`\n    width: 16px;\n    height: 16px;\n    background-color: #CC0001;\n    border-radius: 8px;\n`\n\nconst GreyIcon = styled(SVG)`\n    fill: #B7B7B7;\n`\n\nconst LinkTitle = styled.div`\n    font-size: 15px;\n    color: #000000;\n    margin-left: 12px;\n    margin-right: auto;\n`\n\ninterface ImageProps {\n    src: string;\n}\n\nconst PersonImage = styled.div`\n    width: 72px;\n    height: 72px;\n    border-radius: 50%;\n    background-size: cover;\n    margin-right: 20px;\n`\n\nconst PersonSurname = styled.div`\n    font-family: PTSerif;\n    font-weight: bold;\n    font-size: 20px;\n    color: #000000;\n`\n\nconst PersonName = styled.div`\n    font-family: PTSerif;\n    font-size: 18px;\n    color: #000000;\n`\n\nconst PersonBlock = styled(Flex)`\n    align-items: center;\n    justify-content: flex-start;\n`\n\nconst PersonDescription = styled.div`\n    padding: 16px 24px;\n    background-color: #F7F7F7;\n    font-size: 15px;\n    color: #000000;\n    line-height: 22px;\n    margin-bottom: 20px;\n`\n\nconst InfoBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 14px;\n`\n\nconst InfoLabel = styled.div`\n    font-size: 15px;\n    color: #646464;\n    letter-spacing: 0;\n    max-width: 65%;\n`\n\nconst Line = styled.div`\n    height: 1px;\n    background-color: #E5E5E5;\n`\n\nconst InfoData = styled.div`\n`\n\nconst PropertyType = styled.div`\n    background: #FFFFFF;\n    border: 1px solid #E5E5E5;\n    box-shadow: 0 1px 4px 0 rgba(0,0,0,0.07);\n    border-radius: 18px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0 16px;\n    margin-right: 10px;\n    margin-bottom: 10px;\n`\n\nconst PropertyTypeName = styled.div`\n    font-size: 14px;\n    color: #4A4A4A;\n    margin-left: 10px;\n    margin-right: 14px;\n`\n\nconst PropertyDash = styled.div`\n    width: 1px;\n    height: 20px;\n    background-color: #E5E5E5;\n`\n\nconst PropertyCount = styled.div`\n    margin-left: 14px;\n    color: #4A4A4A;\n`\n\nconst PropertyTypes = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: flex-start;\n    margin-bottom: -10px;\n`\n\nconst OtherPropertyImage = styled.img`\n    border-radius: 5px;\n    width: 100%;\n    height: auto;\n    margin-bottom: 16px;\n`\n\nconst OtherPropertyPrice = styled.div`\n    font-size: 15px;\n    color: #646464;\n`\n\nconst Sidebar: FC = () => {\n    return (\n        <SidebarContainer>\n            <SearchBar />\n            <Block>\n                <SidebarTitle>\n                    Объект\n                </SidebarTitle>\n            </Block>\n            <PropertyImage src='https://avatars.mds.yandex.net/get-zen_doc/1641493/pub_5d5526c932335400ad075f91_5d55280ef2df2500ad7b61f1/scale_1200' />\n            <Block>\n                <Flex>\n                    <PropertyName>Дом в Псехако</PropertyName>\n                    <PropertyFeature>2112м<sup>2</sup></PropertyFeature>\n                </Flex>\n                <PropertyDescription>Усачёва ул., 1А, стр. 2</PropertyDescription>\n            </Block>\n            <Block>\n                <Flex>\n                    <PriceTag>240 000 000 руб.</PriceTag>\n                </Flex>\n            </Block>\n            <Block>\n                <Link href='google.com'>\n                    <LogoFBK />\n                    <LinkTitle>Ссылка на расследование ФБК</LinkTitle>\n                    <GreyIcon src={linkSvg} />\n                </Link>\n            </Block>\n            <Block>\n                <SidebarTitle>\n                    Владелец\n                </SidebarTitle>\n            </Block>\n            <Block>\n                <PersonBlock>\n                    <PersonImage style={{ backgroundImage: 'url(http://duma.gov.ru/media/persons/240x240_2x/bBET61AcAEG5c8Nk7jlFAW1XRFQCAc8l.jpg)' }} />\n                    <div>\n                        <PersonSurname>Пупа</PersonSurname>\n                        <PersonName>Виталий Сергеевич</PersonName>\n                    </div>\n                </PersonBlock>\n            </Block>\n            <PersonDescription>\n                Заведующий по перепутыванию при бухгалтерии Государственной Думы Российской Федерации\n            </PersonDescription>\n            <Block>\n                <InfoBlock>\n                    <InfoLabel>Партия</InfoLabel>\n                    <InfoData>Единая Россия</InfoData>\n                </InfoBlock>\n                <InfoBlock>\n                    <InfoLabel>Стаж на посту</InfoLabel>\n                    <InfoData>3,5 года</InfoData>\n                </InfoBlock>\n                <InfoBlock>\n                    <InfoLabel>Официальный оклад</InfoLabel>\n                    <InfoData>455 000 руб.</InfoData>\n                </InfoBlock>\n                <InfoBlock>\n                    <InfoLabel>Время для накопления стоимости объекта</InfoLabel>\n                    <InfoData>90 лет</InfoData>\n                </InfoBlock>\n            </Block>\n            <Block>\n                <Line />\n            </Block>\n            <Block>\n                <SidebarTitle>\n                    Другое имущество чиновника\n                </SidebarTitle>\n            </Block>\n            <Block>\n                <InfoBlock>\n                    <InfoLabel>Общая стоимость</InfoLabel>\n                    <InfoData>2 980 200 000 руб</InfoData>\n                </InfoBlock>\n            </Block>\n            <Block>\n                <PropertyTypes>\n                    <PropertyType>\n                        <GreyIcon src={shipSvg} />\n                        <PropertyTypeName>Яхты</PropertyTypeName>\n                        <PropertyDash />\n                        <PropertyCount>1</PropertyCount>\n                    </PropertyType>\n                    <PropertyType>\n                        <GreyIcon src={planeSvg} />\n                        <PropertyTypeName>Самолёты</PropertyTypeName>\n                        <PropertyDash />\n                        <PropertyCount>2</PropertyCount>\n                    </PropertyType>\n                    <PropertyType>\n                        <GreyIcon src={buildingSvg} />\n                        <PropertyTypeName>Недвижимость</PropertyTypeName>\n                        <PropertyDash />\n                        <PropertyCount>7</PropertyCount>\n                    </PropertyType>\n                </PropertyTypes>\n            </Block>\n            <Block>\n                <OtherPropertyImage src='https://i.imgur.com/A0sTAOh.jpg' />\n                <Flex>\n                    <PropertyName>Дом в Майнкрафте</PropertyName>\n                    <PropertyFeature>1920м<sup>2</sup></PropertyFeature>\n                </Flex>\n                <OtherPropertyPrice>120 руб</OtherPropertyPrice>\n            </Block>\n            <Block>\n                <OtherPropertyImage src='https://i.imgur.com/Wf8wsxR.png' />\n                <Flex>\n                    <PropertyName>Ещё один дом в Майнкрафте</PropertyName>\n                    <PropertyFeature>1298м<sup>2</sup></PropertyFeature>\n                </Flex>\n                <OtherPropertyPrice>57 руб</OtherPropertyPrice>\n            </Block>\n        </SidebarContainer>\n    )\n}\n\nexport default Sidebar","import styled from 'styled-components'\nimport React, { FC } from 'react'\nimport Icon from './Icon'\nimport logoSvg from '../logo.svg'\n\nconst LogoText = styled.div`\n    font-family: Helvetica;\n    font-size: 25px;\n    color: #000000;\n    margin-left: 10px;\n    font-weight: bold;\n`\n\nconst LogoIcon = styled(Icon)`\n    fill: #E32525;\n`\n\ninterface LogoProps {\n    className?: string\n}\n\nconst Logo: FC<LogoProps> = ({ className }) => {\n    return (\n        <div className={className}>\n            <LogoIcon src={logoSvg} />\n            <LogoText>snatchmap</LogoText>\n        </div>\n    )\n}\n\nexport default styled(Logo)`\n    position: absolute;\n    background: #fff;\n    left: 50%;\n    top: 10px;\n    padding: 0 26px;\n    border-radius: 38px;\n    transform: translateX(-50%);\n    box-shadow: 0 2px 6px 0 rgba(0,0,0,0.20);\n    border-radius: 27px;\n    height: 54px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`","import styled from 'styled-components'\nimport React, { FC } from 'react'\n\ninterface LogoProps {\n    className?: string\n}\n\nconst SearchIcon = styled.div`\n    width: 20px;\n    height: 20px;\n    background: rgba(0,0,0,0.5);\n`\nconst ClearIcon = styled.div`\n    width: 20px;\n    height: 20px;\n    background: rgba(0,0,0,0.5);\n`\nconst Input = styled.input`\n    width: 250px;\n    height: 36px;\n    border: none;\n    border-right: 1px solid rgba(0,0,0,0.2);\n    margin: 0 3px 0 0\n`\n\nconst Search: FC<LogoProps> = ({ className }) => {\n    return (\n        <label className={className}>\n            <SearchIcon />\n            <Input type=\"text\" placeholder=\"Поиск объектов и транспорта\" />\n            <ClearIcon />\n        </label>\n    )\n}\n\nexport default styled(Search)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 2px;\n    position: absolute;\n    background: #fff;\n    top: 10px;\n    left: 10px;\n    border-radius: 4px;\n`","import React from 'react';\nimport Map from './components/Map'\nimport Sidebar from './components/Sidebar'\nimport Logo from 'components/Logo'\nimport Search from 'components/Search'\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Map />\n      <Sidebar />\n      <Logo />\n      <Search />\n    </>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Normalize } from 'styled-normalize'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <>\n        <Normalize />\n        <App />\n    </>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}