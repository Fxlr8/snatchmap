{"version":3,"sources":["svg/map/pin.svg","svg/link.svg","svg/ship.svg","svg/plane.svg","svg/building.svg","logo.svg","components/Map.tsx","components/Icon.tsx","breakpoints.ts","components/Sidebar.tsx","components/Logo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MapComponent","ReactMapboxGl","accessToken","layoutLayer","image","Image","src","pin","images","styled","className","useAxios","data","loading","error","console","log","style","center","type","id","layout","items","map","item","location","geometry","coordinates","key","_id","Icon","props","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SidebarContainer","div","show","SidebarTitle","Block","ClickableBlock","Flex","SearchBar","PropertyImage","img","PropertyName","PropertyFeature","PropertyDescription","PriceTag","Link","a","LogoFBK","GreyIcon","SVG","LinkTitle","PersonImage","PersonSurname","PersonName","PersonBlock","PersonDescription","InfoBlock","InfoLabel","Line","InfoData","PropertyType","PropertyTypeName","PropertyDash","PropertyCount","PropertyTypes","OtherPropertyImage","OtherPropertyPrice","PropertyInfo","property","photoUrl","name","text","price","value","target","href","fbkUrl","linkSvg","PersonInfo","person","backgroundImage","surname","description","party","salary","OtherProperty","dispatch","useContext","StateContext","onClick","propertyId","ownerId","personId","OtherProperties","properties","reduce","s","h","p","houses","ships","planes","shipSvg","planeSvg","buildingSvg","filter","otherProperty","Sidebar","propertiesData","count","find","LogoText","LogoIcon","logoSvg","SELECT_PROPERTY","appReducer","state","action","initialState","sidebar","createContext","App","useReducer","Provider","Boolean","window","hostname","match","ReactDOM","render","locale","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df1becd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pin.ce25c562.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.15cce0de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ship.e3907d7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/plane.6a9cdf8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/building.97dede31.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2809b199.svg\";","import styled from 'styled-components'\nimport React, { FC } from 'react'\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl'\nimport useAxios from 'axios-hooks'\n\n// import plane from 'svg/plane.svg'\n// import ship from 'svg/ship.svg'\nimport pin from 'svg/map/pin.svg'\nimport { Property } from 'apiTypes'\n\nconst MapComponent = ReactMapboxGl({\n    accessToken: 'pk.eyJ1IjoiZnhscjgiLCJhIjoiY2s0NGpieWpkMGJ6eDNvbWdvcml1aG1pZSJ9.pAeNPdFX91L9Z33XLXrnbA',\n})\n\ninterface MapProps {\n    className?: string\n}\n\nconst layoutLayer = { 'icon-image': 'pin' }\n\nconst image = new Image()\nimage.src = pin\nconst images: any = ['pin', image]\n\nconst Map: FC<MapProps> = ({ className }) => {\n    const [{ data, loading, error }] = useAxios(\n        'https://branched-glue.glitch.me/object/objects?fields=link,name,text,personInfo,locationUrl,location'\n    )\n\n    console.log(data)\n\n    return (\n        <MapComponent\n            style=\"mapbox://styles/mapbox/light-v10\" //eslint-disable-line\n            center={[37.627771, 55.7537485]}\n            className={className}\n        >\n            <>\n                {!loading && !error ? (\n                    <Layer type=\"symbol\" id=\"marker\" layout={layoutLayer} images={images}>\n                        {data.items.map((item: Property) => {\n                            const [lat, lng] = item.location.geometry.coordinates\n                            const coordinates = [lat, lng]\n                            return <Feature key={item._id} coordinates={coordinates} />\n                        })}\n                    </Layer>\n                ) : null}\n            </>\n        </MapComponent>\n    )\n}\n\nexport default styled(Map)`\n    height: 100vh;\n    width: 100vw;\n`\n","import SVG, { IProps as SvgProps } from 'react-inlinesvg'\nimport React, { FC } from 'react'\n\ninterface IconProps {\n    src: string\n    className?: string\n}\n\nconst Icon: FC<IconProps | SvgProps> = (props) => {\n    return (\n        <SVG  {...props} />\n    )\n}\n\nexport default Icon\n","const size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\nconst device = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    mobileL: `(min-width: ${size.mobileL})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n    desktopL: `(min-width: ${size.desktop})`\n};\n\nexport default device\n\n\n\n","import React, { FC, useContext } from 'react'\nimport styled from 'styled-components'\nimport SVG from './Icon'\nimport linkSvg from '../svg/link.svg'\nimport shipSvg from '../svg/ship.svg'\nimport planeSvg from '../svg/plane.svg'\nimport buildingSvg from '../svg/building.svg'\nimport device from '../breakpoints'\nimport useAxios from 'axios-hooks'\nimport { Property, Person } from '../apiTypes'\nimport { StateContext } from '../App'\nimport { FormattedNumber } from 'react-intl'\n\nconst SidebarContainer = styled.div<SidebarContainerProps>`\n    width: 100vw;\n    height: 70vh;\n    top: 30vh;\n    background-color: #FFF;\n    position: fixed;\n    left: 0;\n    z-index: 10;\n    overflow-y: scroll;\n\n    transform: translateX(${props => props.show ? 0 : -100}%);\n    transition: transform 200ms ease;\n\n    @media ${device.laptop} {\n        width: 420px;\n        height: 100vh;\n        top: 0;\n        transform: translateX(${props => props.show ? 0 : -100}%);\n        transform: translateY(${props => props.show ? 0 : 100}%);\n    }\n`\n\nconst SidebarTitle = styled.div`\n    font-family: Roboto;\n    font-size: 13px;\n    color: #646464;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n    font-weight: medium;\n`\n\nconst Block = styled.div`\n    padding: 0 24px;\n    margin-bottom: 24px;\n`\n\nconst ClickableBlock = styled(Block)`\n    cursor: pointer;\n`\n\nconst Flex = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n`\n\nconst SearchBar = styled.div`\n    margin: 24px;\n    border-radius: 5px;\n    background: #FFFFFF;\n    box-shadow: 0 2px 6px 0 rgba(0,0,0,0.20);\n    height: 48px;\n`\n\nconst PropertyImage = styled.img`\n    width: 100%;\n    height: auto;\n    margin-bottom: 24px;\n`\n\nconst PropertyName = styled.div`\n    font-family: PTSerif;\n    font-weight: bold;\n    font-size: 20px;\n    color: #000000;\n    letter-spacing: 0;\n`\n\nconst PropertyFeature = styled.div`\n    color: #646464;\n    font-size: 16px;\n`\n\nconst PropertyDescription = styled.div`\n    font-size: 15px;\n    line-height: 22px;\n    color: #646464;\n`\n\nconst PriceTag = styled.div`\n    padding: 9px 15px;\n    border-radius: 5px;\n    background-color: #E32525;\n    color: #FFF;\n    font-weight: bold;\n    font-size: 20px;\n`\n\nconst Link = styled.a`\n    padding: 20px 0;\n    border-top: 1px solid #E5E5E5;\n    border-bottom: 1px solid #E5E5E5;\n    display: flex;\n    text-decoration: none;\n`\n\nconst LogoFBK = styled.div`\n    width: 16px;\n    height: 16px;\n    background-color: #CC0001;\n    border-radius: 8px;\n`\n\nconst GreyIcon = styled(SVG)`\n    fill: #B7B7B7;\n`\n\nconst LinkTitle = styled.div`\n    font-size: 15px;\n    color: #000000;\n    margin-left: 12px;\n    margin-right: auto;\n`\n\ninterface ImageProps {\n    src: string;\n}\n\nconst PersonImage = styled.div`\n    width: 72px;\n    height: 72px;\n    border-radius: 50%;\n    background-size: cover;\n    margin-right: 20px;\n`\n\nconst PersonSurname = styled.div`\n    font-family: PTSerif;\n    font-weight: bold;\n    font-size: 20px;\n    color: #000000;\n`\n\nconst PersonName = styled.div`\n    font-family: PTSerif;\n    font-size: 18px;\n    color: #000000;\n`\n\nconst PersonBlock = styled(Flex)`\n    align-items: center;\n    justify-content: flex-start;\n`\n\nconst PersonDescription = styled.div`\n    padding: 16px 24px;\n    background-color: #F7F7F7;\n    font-size: 15px;\n    color: #000000;\n    line-height: 22px;\n    margin-bottom: 20px;\n`\n\nconst InfoBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 14px;\n`\n\nconst InfoLabel = styled.div`\n    font-size: 15px;\n    color: #646464;\n    letter-spacing: 0;\n    max-width: 65%;\n`\n\nconst Line = styled.div`\n    height: 1px;\n    background-color: #E5E5E5;\n`\n\nconst InfoData = styled.div`\n`\n\nconst PropertyType = styled.div`\n    background: #FFFFFF;\n    border: 1px solid #E5E5E5;\n    box-shadow: 0 1px 4px 0 rgba(0,0,0,0.07);\n    border-radius: 18px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0 16px;\n    margin-right: 10px;\n    margin-bottom: 10px;\n`\n\nconst PropertyTypeName = styled.div`\n    font-size: 14px;\n    color: #4A4A4A;\n    margin-left: 10px;\n    margin-right: 14px;\n`\n\nconst PropertyDash = styled.div`\n    width: 1px;\n    height: 20px;\n    background-color: #E5E5E5;\n`\n\nconst PropertyCount = styled.div`\n    margin-left: 14px;\n    color: #4A4A4A;\n`\n\nconst PropertyTypes = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: flex-start;\n    margin-bottom: -10px;\n`\n\nconst OtherPropertyImage = styled.img`\n    border-radius: 5px;\n    width: 100%;\n    height: auto;\n    margin-bottom: 16px;\n`\n\nconst OtherPropertyPrice = styled.div`\n    font-size: 15px;\n    color: #646464;\n`\n\ninterface SidebarProps {\n    show: boolean\n    propertyId?: string\n    ownerId?: string\n}\n\ninterface SidebarContainerProps {\n    show: boolean\n}\n\ninterface ApiPropertiesResponse {\n    count: number\n    items: Property[]\n}\n\ninterface PropertyInfoProps {\n    property: Property\n}\n\nconst PropertyInfo: FC<PropertyInfoProps> = ({ property }) => {\n    return (\n        <>\n            <Block>\n                <SidebarTitle>\n                    Объект\n                </SidebarTitle>\n            </Block>\n            <PropertyImage src={property.photoUrl} />\n            <Block>\n                <Flex>\n                    <PropertyName>{property.name}</PropertyName>\n                    <PropertyFeature>2112м<sup>2</sup></PropertyFeature>\n                </Flex>\n                <PropertyDescription>{property.text}</PropertyDescription>\n            </Block>\n            {property.price && <Block>\n                <Flex>\n                    <PriceTag><FormattedNumber value={property.price} /> руб.</PriceTag>\n                </Flex>\n            </Block>}\n            <Block>\n                <Link target='_blank' href={property.fbkUrl}>\n                    <LogoFBK />\n                    <LinkTitle>Ссылка на расследование ФБК</LinkTitle>\n                    <GreyIcon src={linkSvg} />\n                </Link>\n            </Block>\n        </>\n    )\n}\n\ninterface PersonInfoProps {\n    person: Person\n}\n\nconst PersonInfo: FC<PersonInfoProps> = ({ person }) => {\n    return (\n        <>\n            <Block>\n                <SidebarTitle>\n                    Владелец\n                </SidebarTitle>\n            </Block>\n            <Block>\n                <PersonBlock>\n                    <PersonImage style={{ backgroundImage: 'url(http://duma.gov.ru/media/persons/240x240_2x/bBET61AcAEG5c8Nk7jlFAW1XRFQCAc8l.jpg)' }} />\n                    <div>\n                        <PersonSurname>{person.surname}</PersonSurname>\n                        <PersonName>{person.name}</PersonName>\n                    </div>\n                </PersonBlock>\n            </Block>\n            <PersonDescription>\n                {person.description}\n            </PersonDescription>\n            <Block>\n                <InfoBlock>\n                    <InfoLabel>Партия</InfoLabel>\n                    <InfoData>{person.party}</InfoData>\n                </InfoBlock>\n                <InfoBlock>\n                    <InfoLabel>Стаж на посту</InfoLabel>\n                    <InfoData>3,5 года</InfoData>\n                </InfoBlock>\n                <InfoBlock>\n                    <InfoLabel>Официальный оклад</InfoLabel>\n                    <InfoData>{person.salary} руб.</InfoData>\n                </InfoBlock>\n                <InfoBlock>\n                    <InfoLabel>Время для накопления стоимости объекта</InfoLabel>\n                    <InfoData>90 лет</InfoData>\n                </InfoBlock>\n            </Block>\n        </>\n    )\n}\n\nconst OtherProperty: FC<PropertyInfoProps> = ({ property }) => {\n    const { dispatch } = useContext(StateContext)\n    return (\n        <ClickableBlock onClick={() => dispatch({ type: 'SELECT_PROPERTY', propertyId: property._id, ownerId: property.personId })}>\n            <OtherPropertyImage src={property.photoUrl} />\n            <Flex>\n                <PropertyName>{property.name}</PropertyName>\n                <PropertyFeature>1920м<sup>2</sup></PropertyFeature>\n            </Flex>\n            <OtherPropertyPrice>{property.price} руб</OtherPropertyPrice>\n        </ClickableBlock>\n    )\n}\n\ninterface OtherPropertiesProps {\n    properties: Property[]\n    propertyId?: string\n}\n\nconst OtherProperties: FC<OtherPropertiesProps> = ({ properties, propertyId }) => {\n    const [houses, ships, planes] = properties.reduce(([s, h, p], { type }) => {\n        switch (type) {\n            case 'yacht': s += 1\n                break\n            case 'building': h += 1\n                break\n            case 'plane': p += 1\n                break\n        }\n        return [s, h, p]\n    }, [0, 0, 0])\n    return (\n        <>\n            {houses + ships + planes > 0 && <Block>\n                <PropertyTypes>\n                    {ships > 0 && <PropertyType>\n                        <GreyIcon src={shipSvg} />\n                        <PropertyTypeName>Яхты</PropertyTypeName>\n                        <PropertyDash />\n                        <PropertyCount>{ships}</PropertyCount>\n                    </PropertyType>}\n                    {planes > 0 && <PropertyType>\n                        <GreyIcon src={planeSvg} />\n                        <PropertyTypeName>Самолёты</PropertyTypeName>\n                        <PropertyDash />\n                        <PropertyCount>{planes}</PropertyCount>\n                    </PropertyType>}\n                    {houses > 0 && <PropertyType>\n                        <GreyIcon src={buildingSvg} />\n                        <PropertyTypeName>Недвижимость</PropertyTypeName>\n                        <PropertyDash />\n                        <PropertyCount>{houses}</PropertyCount>\n                    </PropertyType>}\n                </PropertyTypes>\n            </Block>}\n            {properties.filter(p => p._id !== propertyId).map(otherProperty =>\n                <OtherProperty property={otherProperty} />\n            )}\n        </>\n    )\n}\n\nconst Sidebar: FC<SidebarProps> = ({ show, propertyId, ownerId }) => {\n    // const [{ data, loading, error }] = useAxios<Property>(\n    //     `https://branched-glue.glitch.me/object/objects/${propertyId}`\n    // )\n\n    const [{ data: person }] = useAxios(\n        `https://branched-glue.glitch.me/object/persons/${ownerId}`\n    )\n\n    const [{ data: propertiesData }] = useAxios<ApiPropertiesResponse>(\n        `https://branched-glue.glitch.me/object/objects?personId=${ownerId}`\n    )\n\n    console.log(propertiesData)\n\n    const property = propertiesData && propertiesData.count > 0 && propertiesData.items.find(p => p._id === propertyId)\n\n    return (\n        <SidebarContainer show={show}>\n            <SearchBar />\n            {property && <PropertyInfo property={property} />}\n            {person && <PersonInfo person={person} />}\n            <Block>\n                <Line />\n            </Block>\n            <Block>\n                <SidebarTitle>\n                    Другое имущество чиновника\n                </SidebarTitle>\n            </Block>\n            <Block>\n                <InfoBlock>\n                    <InfoLabel>Общая стоимость</InfoLabel>\n                    <InfoData>2 980 200 000 руб</InfoData>\n                </InfoBlock>\n            </Block>\n            {propertiesData && propertiesData.items && <OtherProperties properties={propertiesData.items} propertyId={propertyId} />}\n        </SidebarContainer>\n    )\n}\n\nexport default Sidebar","import styled from 'styled-components'\nimport React, { FC } from 'react'\nimport Icon from './Icon'\nimport logoSvg from '../logo.svg'\n\nconst LogoText = styled.div`\n    font-family: Helvetica;\n    font-size: 25px;\n    color: #000000;\n    margin-left: 10px;\n    font-weight: bold;\n`\n\nconst LogoIcon = styled(Icon)`\n    fill: #E32525;\n`\n\ninterface LogoProps {\n    className?: string\n}\n\nconst Logo: FC<LogoProps> = ({ className }) => {\n    return (\n        <div className={className}>\n            <LogoIcon src={logoSvg} />\n            <LogoText>snatchmap</LogoText>\n        </div>\n    )\n}\n\nexport default styled(Logo)`\n    position: absolute;\n    background: #fff;\n    left: 50%;\n    top: 10px;\n    padding: 0 26px;\n    border-radius: 38px;\n    transform: translateX(-50%);\n    box-shadow: 0 2px 6px 0 rgba(0,0,0,0.20);\n    border-radius: 27px;\n    height: 54px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`","import React, { useReducer, useContext, createContext } from 'react';\nimport Map from './components/Map'\nimport Sidebar from './components/Sidebar'\nimport Logo from 'components/Logo'\nimport Search from 'components/Search'\n\nconst TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR'\nconst SELECT_PROPERTY = 'SELECT_PROPERTY'\n\ninterface ToggleSidebarAction {\n  type: typeof TOGGLE_SIDEBAR\n  payload?: boolean\n}\n\ninterface SetPropertyAction {\n  type: typeof SELECT_PROPERTY\n  propertyId: string,\n  ownerId: string\n}\n\ntype AppActions = ToggleSidebarAction | SetPropertyAction\n\ninterface AppState {\n  sidebar: boolean\n  propertyId?: string\n  ownerId?: string\n}\n\nfunction appReducer(state: AppState, action: AppActions): AppState {\n  switch (action.type) {\n    case SELECT_PROPERTY: return {\n      ...state,\n      propertyId: action.propertyId,\n      ownerId: action.ownerId\n    }\n  }\n  return state\n}\n\nconst initialState = {\n  sidebar: true,\n  propertyId: '5df642455341ca2822139b31',\n  ownerId: '5df642455341ca2822139b33'\n}\n\nconst StateContext = createContext<{ state: AppState, dispatch: React.Dispatch<AppActions> }>(\n  {\n    state: initialState,\n    dispatch: () => initialState\n  }\n)\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer(appReducer, initialState)\n\n  return (\n    <StateContext.Provider value={{ state, dispatch }}>\n      <Map />\n      <Sidebar show={state.sidebar} propertyId={state.propertyId} ownerId={state.ownerId} />\n      <Logo />\n      {/* <Search /> */}\n    </StateContext.Provider >\n  );\n}\n\nexport {\n  StateContext\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Normalize } from 'styled-normalize'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { IntlProvider } from 'react-intl';\n\nReactDOM.render(\n    <IntlProvider locale='ru'>\n        <Normalize />\n        <App />\n    </IntlProvider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}